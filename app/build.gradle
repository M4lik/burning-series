buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "me.tatarka:gradle-retrolambda:3.5.0"
        classpath "com.android.tools.build:gradle:2.2.3"
        classpath "com.neenbedankt.gradle.plugins:android-apt:1.6"
    }
}

// Required because retrolambda is on maven central
repositories {
    mavenCentral();
    jcenter();
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.android.application' //or apply plugin: 'java'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    def versionPropsFile = file('version.properties')
    def versionBuild

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
    }

    defaultConfig {
        applicationId "de.m4lik.burningseries"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode versionBuild
        versionName "0.10.3"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(generateDebugSources)) {  /* when run debug task */
            println("Increasing Build number")
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            println("Increasing Build number")
            autoIncrementBuildNumber()
        }
    }
}

apply from: "dependencies.gradle"

dependencies {
    compile 'com.google.android.gms:play-services-gcm:10.0.1'
    compile 'com.android.support:support-v4:25.1.1'
}
apply plugin: 'com.google.gms.google-services'